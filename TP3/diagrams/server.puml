@startuml
class Server {
    run() [wait for exit]
    HoneyPot pot
    ClientListener listener
}

class Socket {
    int fd
    send()
    recv()
}

class ClientListener <Thread> {
    run() [accept clients]
    ClientTalker* clients
    Socket skt
}

class ClientTalker <Thread> {
    run() [respond commands]
    Socket peerskt
    user
    passwd
}

class HoneyPot {
    DirectoryList dirList
    addDir(dir)
    eraseDir(dir)
}

class DirectoryList
class Command {
    run()
}
class CommandListDirs {
    run() <override>
}
class CommandMakeDir {
    run() <override>
}
class CommandRemoveDir {
    run() <override>
}

Command <|-- CommandListDirs
Command <|-- CommandMakeDir
Command <|-- CommandRemoveDir

Server *-right- HoneyPot
ClientListener *-- Socket
ClientTalker *-left- Socket
HoneyPot <-- ClientTalker
Command <-- ClientTalker
Server *-- ClientListener
ClientListener *-- ClientTalker : *
HoneyPot *-right- DirectoryList
@enduml